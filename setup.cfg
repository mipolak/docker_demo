[metadata]
name = test-app
version = "1.0.0"
description = "test flask app"
author = ["Michal P. <misopo@gmail.com>"]
license = Other/Proprietary
classifiers = 
    Development Status :: 4 - Beta
    License :: OSI Approved :: MIT License
    Intended Audience :: System Administrators
    Programming Language :: Python :: 3.8
    Operating System :: POSIX :: Linux
keywords = ['python','test','docker']


[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "twine",
    "setuptools_scm[toml] >= 4, <6"
]
build-backend = "setuptools.build_meta"

[options]
package_dir =
   = src
python_requires = >=3.8
packages = find:
setup_requires =
    setuptools_scm
    wheel
    twine
install_requires = 
    Flask
include_package_data = True

[options.extras_require]
dev = 
    pytest
    pylint
    pylint2junit
    pytest-cov
    pyright
    check-manifest
    pycodestyle
test = 
    pytest
    pylint
    pylint2junit
    pytest-cov
    pyright
    check-manifest
    pycodestyle

[options.entry_points]
console_scripts =
    apptest = main.main 

[options.packages.find]
where = src
exclude = 
    contrib
    docs
    unittests
    
[tool:pytest]
addopts = --verbose
#python_files = ./tests/unittests/**/*_test.py

[coverage:report]
show_missing = true
exclude_lines =
    pragma: no cover
    if False
    # @abc.abstractmethod
    # @abc.abstractproperty
    # raise NotImplementedError
    # return NotImplemented
    # except ImportError


[pydocstyle]
match-dir = (?!tests)(?!resources)(?!docs)[^\.].*
match = (?!test)(?!setup)[^\._].*\.py
inherit = false
ignore = D200, D203, D213, D406, D407   # Google conventions

[pylint]
exclude=.env
max-line-length=120

[pycodestyle]
exclude=.env
max-line-length=120

